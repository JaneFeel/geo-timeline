{"version":3,"file":"index.cjs","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticks = self._addTicks(self._cell)\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      trans(this._ticks, duration)\n        .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n        .attr('opacity', ((d: NodeItem) => {\n          const text = d.data.start + 'ma'\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(text, this.font);\n\n          return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n        }))\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n    \n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  readonly width: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this.width = width\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n      if (x > this.width) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text > 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const time = Math.floor(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","DefaultOpts","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","GeoTimeLine","selector","intervals","options","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_forceTrans","selection","select","length","containerWidth","style","split","opts","_extends","isNaN","onChange","onAfterChange","minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","self","_self$options","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","extent","scaleExtent","d3zoom","translateExtent","transform","k","_transform","scaleBy","x","pointer","func","handle","addStripe","cell","color","textColor","_d$data$textColor","ticks","y","_this","clone","lower","_this2","toFixed","scale","dataLevel","_d$data$level","children","_d$children","textX","labelWidth","name","abbrev","abbr","charAt","rectWidth","rescaleX","find","_setTime","min","maxTime","max","minTime","Error","scaleX","newx","bool","translateTo","zoomedScale","invert","handleX","set","val","scaleTo","simplify","neighborWidth","tickLength","unit","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","parent","focus","_this$_focus$parent$y","_this$_focus$parent","focusAncestors","ancestors","slice","leftNeighbor","widthMinusNeighbors","focusWidth","y0","y1","depth","includes","Number","id","g","_makeTicksData","sequence","reverse","onDrag","_addTitle","getTimeByX","console","log","sourceEvent","type","wheelDelta","undefined","offsetX","offsetY","_self$_focus$y","_self$_focus","map","_event","svgHeight","ticksData","_d$target","_d$parent","ifFocusBottom","_this3","targetX","now","_this$root$target","_this$root","push","_updateTicks","_this4","enter","tick","_this5","update","_node$data","floor","getXByTime","_node$data2","key","maxLevelNodeParent"],"mappings":"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"}