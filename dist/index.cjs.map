{"version":3,"file":"index.cjs","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n  showTick: true\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  private _showTick: boolean;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   * @param {boolean} [options.showTick = true] show or hide tick, defaults to true\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition, showTick } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this._showTick = showTick\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n    self._text = self._drawText(self._cell)\n\n    if (self._showTick) {\n      // draw text\n      self._ticks = self._addTicks(self._cell)      \n    }\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      if (this._showTick) {\n        trans(this._ticks, duration)\n          .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n          .attr('opacity', ((d: NodeItem) => {\n            const text = d.data.start + 'ma'\n            const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n            const labelWidth = getTextWidth(text, this.font);\n\n            return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n          }))\n      }\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n    \n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  readonly width: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this.width = width\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node, true)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n      if (x > this.width) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text > 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const time = Math.ceil(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","showTick","selector","intervals","options","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_showTick","_forceTrans","selection","select","Error","length","containerWidth","style","split","opts","_extends","DefaultOpts","isNaN","onChange","onAfterChange","minZoom","_opts$minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","_self$options","self","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","extent","scaleExtent","translateExtent","d3zoom","transform","k","_transform","scaleBy","x","pointer","func","addStripe","handle","cell","color","textColor","_d$data$textColor","_this","ticks","y","clone","lower","_this2","toFixed","scale","_d$data$level","_d$children","dataLevel","children","textX","Number","rectWidth","labelWidth","name","abbrev","abbr","charAt","rescaleX","find","_setTime","minTime","min","maxTime","max","scaleX","bool","newx","translateTo","zoomedScale","invert","handleX","val","key","get","scaleTo","simplify","neighborWidth","tickLength","unit","GeoTimeLine","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","parent","focus","_this$_focus$parent$y","_this$_focus$parent","focusAncestors","ancestors","slice","leftNeighbor","widthMinusNeighbors","focusWidth","y0","y1","depth","includes","id","g","_makeTicksData","sequence","reverse","onDrag","_addTitle","getTimeByX","console","log","zoom","sourceEvent","type","wheelDelta","undefined","_self$_focus$y","_self$_focus","offsetX","offsetY","map","_event","svgHeight","_this$root","_this$root$target","_this3","_d$parent","ifFocusBottom","targetX","_d$target","now","ticksData","push","_updateTicks","_this4","enter","tick","_this5","update","ceil","getXByTime","_createClass","set","maxLevelNodeParent"],"mappings":"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"}