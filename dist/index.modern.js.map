{"version":3,"file":"index.modern.js","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticks = self._addTicks(self._cell)\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      trans(this._ticks, duration)\n        .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n        .attr('opacity', ((d: NodeItem) => {\n          const text = d.data.start + 'ma'\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(text, this.font);\n\n          return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n        }))\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n    \n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      if (!maxLevelNodeParent.visible) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text > 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const time = Math.floor(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","DefaultOpts","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","GeoTimeLine","constructor","selector","intervals","options","_opts$minZoom","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_forceTrans","selection","select","Error","length","containerWidth","style","split","isNaN","onChange","onAfterChange","opts","minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","val","_setTime","scaleTo","ready","self","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","scaleExtent","translateExtent","d3zoom","extent","transform","k","_transform","scaleBy","x","pointer","func","addStripe","handle","cell","color","textColor","_d$data$textColor","ticks","y","clone","lower","toFixed","_d$data$level","_d$children","scale","dataLevel","children","Number","textX","name","abbr","charAt","labelWidth","abbrev","rescaleX","find","min","maxTime","max","minTime","scaleX","newx","translateTo","bool","zoomedScale","invert","handleX","simplify","neighborWidth","tickLength","unit","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","_p$parent","focus","parent","focusAncestors","ancestors","slice","leftNeighbor","widthMinusNeighbors","focusWidth","_this$_focus$parent$y","_this$_focus$parent","y0","y1","depth","includes","id","rectWidth","g","_makeTicksData","reverse","sequence","_extends","onDrag","stage","undefined","maxLevelNodeParent","console","log","getXByTime","_addTitle","getTimeByX","sourceEvent","type","wheelDelta","_self$_focus$y","_self$_focus","offsetX","offsetY","map","_event","svgHeight","ticksData","_d$target","ifFocusBottom","_d$parent","targetX","_this$root$target","_this$root","push","now","_updateTicks","enter","tick","update","floor"],"mappings":"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"}