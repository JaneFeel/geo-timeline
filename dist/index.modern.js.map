{"version":3,"file":"index.modern.js","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n  showTick: true\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  private _showTick: boolean;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   * @param {boolean} [options.showTick = true] show or hide tick, defaults to true\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition, showTick } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this._showTick = showTick\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n\n    if (self._showTick) {\n      // draw text\n      self._text = self._drawText(self._cell)\n      self._ticks = self._addTicks(self._cell)      \n    }\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      if (this._showTick) {\n        trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      trans(this._ticks, duration)\n        .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n        .attr('opacity', ((d: NodeItem) => {\n          const text = d.data.start + 'ma'\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(text, this.font);\n\n          return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n        }))\n      }\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n    \n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  readonly width: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this.width = width\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node, true)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n      if (x > this.width) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text > 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const time = Math.ceil(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","DefaultOpts","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","showTick","GeoTimeLine","constructor","selector","intervals","options","_opts$minZoom","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_showTick","_forceTrans","select","selection","Error","length","containerWidth","style","split","opts","_extends","isNaN","onChange","onAfterChange","minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","val","_setTime","scaleTo","ready","self","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","extent","scaleExtent","translateExtent","d3zoom","transform","k","_transform","scaleBy","x","pointer","func","handle","addStripe","cell","color","textColor","_d$data$textColor","ticks","y","clone","lower","toFixed","scale","dataLevel","_d$data$level","_d$children","children","Number","textX","name","abbr","charAt","labelWidth","abbrev","rescaleX","find","minTime","min","maxTime","max","scaleX","newx","bool","translateTo","zoomedScale","invert","handleX","simplify","neighborWidth","tickLength","unit","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","_p$parent","parent","focus","ancestors","slice","widthMinusNeighbors","leftNeighbor","focusWidth","_this$_focus$parent$y","_this$_focus$parent","y0","y1","depth","includes","focusAncestors","id","rectWidth","g","_makeTicksData","reverse","sequence","onDrag","stage","undefined","console","log","maxLevelNodeParent","getXByTime","_addTitle","getTimeByX","sourceEvent","type","wheelDelta","_self$_focus$y","_self$_focus","offsetX","offsetY","map","_event","svgHeight","_this$root","_this$root$target","ticksData","_d$target","ifFocusBottom","_d$parent","targetX","now","push","_updateTicks","enter","tick","update","ceil"],"mappings":"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"}