{"version":3,"file":"index.modern.js","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n  showTick: true\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  private _showTick: boolean;\n  private _limitHandle: boolean;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   * @param {boolean} [options.showTick = true] show or hide tick, defaults to true\n   * @param {boolean} [options.limitHandle = true] limit handle position\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition, showTick, limitHandle } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this._showTick = showTick\n    this._limitHandle = limitHandle\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n    self._text = self._drawText(self._cell)\n\n    if (self._showTick) {\n      // draw text\n      self._ticks = self._addTicks(self._cell)      \n    }\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      if (this._showTick) {\n        trans(this._ticks, duration)\n          .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n          .attr('opacity', ((d: NodeItem) => {\n            const text = d.data.start + 'ma'\n            const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n            const labelWidth = getTextWidth(text, this.font);\n\n            return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n          }))\n      }\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n\n    const halfHandleWidth = 15\n    if (x < halfHandleWidth) x = halfHandleWidth\n    if (x > this._width - halfHandleWidth) x = this._width - halfHandleWidth\n\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  readonly width: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this.width = width\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node, true)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n      if (x > this.width) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text >= 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const originTime = start - ((start - end) / nodeWidth * (x - node.target.x0))\n    console.log('originTime', originTime);\n    const time = originTime < 0.004 ? 0 : Math.ceil(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","DefaultOpts","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","showTick","GeoTimeLine","constructor","selector","intervals","options","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_showTick","_limitHandle","_forceTrans","selection","select","Error","length","style","split","opts","_extends","isNaN","containerWidth","onChange","onAfterChange","limitHandle","minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","val","_setTime","scaleTo","ready","self","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","extent","translateExtent","d3zoom","scaleExtent","transform","k","_transform","scaleBy","pointer","x","func","handle","addStripe","cell","color","textColor","_d$data$textColor","ticks","y","clone","lower","toFixed","scale","_d$data$level","_d$children","dataLevel","children","textX","rectWidth","name","abbr","charAt","labelWidth","abbrev","rescaleX","find","minTime","min","maxTime","max","scaleX","newx","bool","translateTo","zoomedScale","invert","handleX","simplify","neighborWidth","tickLength","unit","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","_p$parent","parent","focus","focusAncestors","ancestors","slice","leftNeighbor","widthMinusNeighbors","_this$_focus$parent$y","_this$_focus$parent","focusWidth","y0","y1","depth","includes","id","g","_makeTicksData","sequence","reverse","onDrag","stage","undefined","console","log","maxLevelNodeParent","getXByTime","_addTitle","getTimeByX","sourceEvent","type","wheelDelta","_self$_focus$y","_self$_focus","offsetX","offsetY","map","_event","svgHeight","ticksData","_d$target","ifFocusBottom","_d$parent","targetX","now","_this$root","push","_updateTicks","enter","tick","update","nodeWidth","originTime","ceil"],"mappings":"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"}