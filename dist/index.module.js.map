{"version":3,"file":"index.module.js","sources":["../src/helpers.ts","../src/GeoTimeLine.ts","../src/GeoTimeScale.ts"],"sourcesContent":["import { Selection } from \"d3\";\n\nexport function getTextWidth(text: string, font: string) {\n  // @ts-ignore\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  // re-use canvas object for better performance\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n}\n\n// temporary: avoid a crash due to starting a transition\nexport function trans<T extends Selection<any, any, any, any>>(node: T, duration: number): T {\n  return duration ?\n    node\n      .transition()\n      .duration(duration) as unknown as T :\n    node\n}","import { D3DragEvent, drag, partition, pointer, stratify, Selection, ZoomTransform, select, scaleLinear, zoom as d3zoom, BaseType, ScaleLinear, ZoomBehavior } from 'd3';\nimport { GeoTimeLineOptions, HierarchyNode, IntervalItem, MarginOpts, NodeItem } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeLineOptions> = {\n  height: 70,\n  fontSize: 16,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  time: 0,\n  transition: 450,\n  intervalSum: (d) => d.leaf ? 1 : 0,\n  maxZoom: 10,\n  showTick: true\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** interval data's max level */\n  readonly maxLevel: number;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeLineOptions\n  private _width: number;\n  private _height: number;\n  private _time: number;\n  private _timeLength: number;\n  private _scaleRadio: number;\n  private _scaleVal: number;\n  private _level: number;\n  private _startTime: number;\n  private _endTime: number;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _zoomedScale: ScaleLinear<number, number, never>;\n  private _onChange: (time: number, level: number) => void;\n  private _onAfterChange: (time: number, level: number) => void;\n  private _ready: boolean;\n  private _xAxis: any;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _heightScale: number;\n  private _zoomWidth: number;\n  private _minZoom: number;\n  private _maxZoom: number;\n  private _zoomHeight: number;\n  private _zoom: ZoomBehavior<Element, unknown>;\n  private _interval: number;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _ticks: Selection<SVGGElement, NodeItem, SVGGElement, unknown>;\n  private _margin: MarginOpts;\n  private _padding: MarginOpts;\n  private _showTick: boolean;\n  private _limitHandle: boolean;\n  /** get or set animation transition time */\n  transition: number;\n  private _forceTrans: boolean;\n\n  /**\n   * Create a GeoTimeLine\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 70] svg height, defaults to 70px\n   * @param {number} [options.fontSize = 16] font size, defaults to 16px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when handle's position or scale level changed\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.time = 0] initial time, defaults to 0\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to (d) => d.leaf ? 1 : 0\n   * @param {number} [options.minZoom] min zoom level\n   * @param {number} [options.maxZoom = 10] min zoom level, defaults to 10\n   * @param {boolean} [options.showTick = true] show or hide tick, defaults to true\n   * @param {boolean} [options.limitHandle = true] limit handle position\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeLineOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals!')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeLineOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, margin, padding, intervalSum, onChange, onAfterChange, time, transition, showTick, limitHandle } = opts\n    this._width = width\n    this._height = height\n    this._margin = margin\n    this._padding = padding\n    this._heightScale = height / DefaultOpts.height\n    this._zoomWidth = width - margin.left - margin.right\n    this._zoomHeight = height - margin.top - margin.bottom\n    this.transition = transition\n    this._onChange = onChange\n    this._onAfterChange = onAfterChange\n    this._time = time\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this._minZoom = opts.minZoom = opts.minZoom ?? this._zoomWidth / (this._zoomWidth + padding.right + padding.left)\n    this._maxZoom = opts.maxZoom\n    this._showTick = showTick\n    this._limitHandle = limitHandle\n    this.intervals = intervals\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.maxLevel = this.hierarchicalData.height\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom) * this.maxLevel])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = d.data.level === 1\n    })\n    \n    this._startTime = this.root.data.start\n    this._endTime = this.root.data.end\n    this._timeLength = Math.abs(this._startTime - this._endTime)\n    this._scaleRadio = this._width / (this.root.x1 - this.root.x0)\n    this._scaleVal = this._getScaleXByTime(time)\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n      .style(\"overflow\", 'hidden')\n\n    this._ready = false\n    this._init()\n  }\n\n  /** get or set time */\n  get time() {\n    return this._time\n  }\n\n  set time(val: number) {\n    if (this._setTime(val)) {\n      this._time = +val\n    }\n  }\n\n  /** get or set level */\n  get level() {\n    return this._level\n  }\n\n  set level(val: number) {\n    let level = +val\n    if (val < this._minZoom) level = this._minZoom\n    if (val > this._maxZoom) level = this._maxZoom\n    this._zoom.scaleTo(this.svg, level, [this._zoomedScale(this._scaleVal), 0])\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const { width, height, margin, padding } = self.options\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n      .attr(\"transform\", `translate(0, ${margin.top})`)\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n    \n    self._rect = self._drawRect(self._cell)\n    \n    // draw axis \n    self._xAxis = scaleLinear()\n      .domain([self._endTime, self._startTime])\n      .range([\n        margin.left - padding.left,\n        width - margin.right + padding.right\n      ])\n\n    self._zoomedScale = self._xAxis.copy()\n    self._text = self._drawText(self._cell)\n\n    if (self._showTick) {\n      // draw text\n      self._ticks = self._addTicks(self._cell)      \n    }\n\n    // drag handle\n    self._handle = self._drawHandle(svg)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          self._handle.attr(\"cursor\", \"grab\");\n          clearInterval(self._interval)\n          self._dispatchFunc(self._onAfterChange)\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._changeHandlePos(self._zoomedScale, self._handle, self._zoomedScale(self._scaleVal) + e.dx)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    const extent: [[number, number], [number, number]] = [\n      [margin.left, margin.top],\n      [width - margin.right, height - margin.top]\n    ]\n    const scaleExtent: [number, number] = [self._minZoom, self._maxZoom]\n    const translateExtent: [[number, number], [number, number]] = [[self.root.x0, 0], [self.root.x1, 0]]\n\n    self._zoom = d3zoom()\n      .extent(extent)\n      .scaleExtent(scaleExtent)\n      .translateExtent(translateExtent)\n      .on('zoom', zoomed)\n      .on(\"end\", () => {\n        self._cellGroup.attr(\"cursor\", \"default\");\n      })\n    \n    function zoomed(e: { transform: ZoomTransform; }) {\n      const transform: ZoomTransform = e.transform\n\n      if (transform.k === self._level) {\n        self._cellGroup.attr(\"cursor\", \"grabbing\");\n      }\n\n      self._transform(transform)\n    }\n\n    svg.call(self._zoom)\n    svg.call(self._zoom.scaleBy, self._scaleRadio)\n      .on(\"click\", chooseTime);\n    \n    function chooseTime(e: PointerEvent) {\n      const x = pointer(e)[0]\n      self._changeHandlePos(self._zoomedScale, self._handle, x)\n      self._dispatchFunc(self._onAfterChange)\n    }\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: undefined | ((time: number, level: number) => void)) {\n    if (func && this._ready) {\n      func(this._time, this._level)\n    }\n  }\n\n  /**\n   * draw handle\n   * @param svg \n   * @returns \n   */\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n\n    let handleShape =\n      \"M0 0 l 15 20 v 18 q 0 5 -5 5 h -20 q -5 0 -5 -5 v -18 l 15 -20\";\n    handle\n      .append(\"path\")\n      .attr(\"fill\", \"#ccc\")\n      .attr(\"fill-opacity\", 0.85)\n      .attr(\"stroke\", \"#333\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"d\", handleShape)\n\n    // Add stripes for texture\n    function addStripe(x: number) {\n      handle\n        .append(\"rect\")\n        .attr(\"fill\", \"#515151\")\n        .attr(\"width\", 3)\n        .attr(\"height\", 16)\n        .attr(\"x\", x)\n        .attr(\"y\", 21);\n    }\n\n    addStripe(-7.5);\n    addStripe(-1.5);\n    addStripe(4.5);\n\n    return handle\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('height', this._zoomHeight)\n      .attr('fill', d => d.data.color)\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"y\", this._zoomHeight / 2)\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _addTicks(cell: typeof this._cell) {\n    const ticks = cell\n      .append('g')\n      .attr('id', 'tick')\n    \n    const y = (this._zoomHeight - this.options.fontSize) * 0.8\n\n    ticks\n      .append(\"line\")\n      .attr(\"stroke\", \"#555\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"x1\", 0)\n      .attr(\"y1\", 0)\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y)\n    \n    ticks\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", y + this.options.fontSize)\n      .attr(\"font-size\", (d) => `${1 - 0.05 * d.data.level}em`)\n      .text((d) => d.data.start + 'ma')\n      .attr(\"text-anchor\", d => d.data.start === this._startTime ? 'start' : 'middle')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 1)\n      .attr(\"stroke\", \"white\")\n    \n    return ticks\n  }\n\n  /**\n   * reset svg by transform\n   */\n  private _transform(transform: ZoomTransform): boolean {\n    const { x } = transform\n    const k = +transform.k.toFixed(6)\n\n    const duration = this._ready && ((this._level !== k && k > this._minZoom && k < this._maxZoom) || this._forceTrans) ? this.transition : 0\n    \n    if (this._level !== k) {\n      const scale = k * this._scaleRadio\n\n      this.root.each(d => {\n        d.target = {\n          x0: d.x0 * scale,\n          x1: d.x1 * scale\n        }\n        const dataLevel = (d.data.level ?? 0)\n        d.visible = (dataLevel === ~~k || ((d.children ?? []).length === 0 && dataLevel < k))\n        \n      });\n\n      trans(this._rect, duration)\n        .attr('width', d => (d.target.x1 - d.target.x0))\n        .attr('x', d => (d.target.x0));\n\n      trans(this._text, duration)\n        .attr(\"fill-opacity\", (d) =>\n          d.target.x1 - d.target.x0 > 14 ? 1 : 0\n        )\n        .attr(\"x\", (d) => {\n          const textX = (d.target.x0 + (d.target.x1 - d.target.x0) / 2);\n          return Number.isNaN(textX) ? 0 : textX;\n        })\n        .text((d) => {\n          const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n          const labelWidth = getTextWidth(d.data.name, this.font);\n          const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n          return rectWidth - 10 < labelWidth ? abbrev : d.data.name;\n        });\n      \n      if (this._showTick) {\n        trans(this._ticks, duration)\n          .attr(\"transform\", (d) => `translate(${d.target.x0}, 0)`)\n          .attr('opacity', ((d: NodeItem) => {\n            const text = d.data.start + 'ma'\n            const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n            const labelWidth = getTextWidth(text, this.font);\n\n            return rectWidth < labelWidth * (1 - 0.05 * d.data.level) ? 0 : 1;\n          }))\n      }\n\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n      \n      this._level = k\n\n      this._dispatchFunc(this._onChange)\n      this._dispatchFunc(this._onAfterChange)\n\n    }\n\n    trans(this._cellGroup, duration)\n      .attr('transform', `translate(${x}, ${this._margin.top})`)\n    \n    this._zoomedScale = transform.rescaleX(this._xAxis);\n\n    this._changeHandlePos(this._zoomedScale, this._handle, this._zoomedScale(this._scaleVal), duration)\n\n    return true\n  }\n\n  private _getScaleXByTime(time: number): number {\n    const node = this.root.find(node => node.visible && node.data.start >= time && node.data.end <= time)\n    const xx = node.target.x0 + (node.target.x1 - node.target.x0) * (node.data.start - time) / (node.data.start - node.data.end)\n    const scaleX = xx / (this.root.target.x1 - this.root.target.x0) * this._timeLength\n    return scaleX\n  }\n\n  /**\n   * set time and update handle's position\n   * @param {boolean} time\n   * @return {boolean} success or not\n   */\n  private _setTime(time: number): boolean {\n    const minTime = Math.min(this._endTime, this._startTime)\n    const maxTime = Math.max(this._endTime, this._startTime)\n    if (time < minTime || time > maxTime) {\n      throw Error(`Time value out of range: [${minTime}, ${maxTime}]`)\n    }\n\n    const scaleX = this._getScaleXByTime(time)\n    const newx = this._zoomedScale(scaleX)\n\n    const bool = this._changeHandlePos(this._zoomedScale, this._handle, newx, this.transition)\n\n    this._forceTrans = true\n    this._zoom.translateTo(this.svg, scaleX / this._timeLength * this._width, 0)\n    this._forceTrans = false\n\n    return bool\n  }\n\n  /**\n   * change handle's position and update time\n   * @param zoomedScale \n   * @param handle \n   * @param x mouse x position offset svg\n   * @returns update success or not\n   */\n  private _changeHandlePos(zoomedScale: ScaleLinear<number, number, never>, handle: Selection<SVGGElement, unknown, HTMLElement, any>, x: number, duration?: number): boolean {\n    let scaleX = zoomedScale.invert(x)\n    if (scaleX < 0) scaleX = 0\n    if (scaleX > this._timeLength) scaleX = this._timeLength;\n\n    const halfHandleWidth = 15\n    if (x < halfHandleWidth) x = halfHandleWidth\n    if (x > this._width - halfHandleWidth) x = this._width - halfHandleWidth\n\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, ${this._margin.top}), scale(${this._heightScale})`)\n    this._scaleVal = scaleX\n\n    const handleX = scaleX * this._width / this._timeLength\n    const node = this.root.find(node => node.visible && node.x0 <= handleX && node.x1 >= handleX)\n    const time = +(node.data.start - (node.data.start - node.data.end) * (handleX - node.x0) / (node.x1 - node.x0)).toFixed(6)\n    \n    if (time !== this._time) {\n      this._time = time\n      this._dispatchFunc(this._onChange)\n    }\n\n    return true\n  }\n\n}","import { D3DragEvent, partition, drag, stratify, Selection, select, zoom as d3zoom, BaseType } from 'd3';\nimport { d3ZoomEvent, GeoTimeScaleOptions, HierarchyNode, IntervalItem, NodeItem, TickNode } from './typing';\nimport { getTextWidth, trans } from './helpers';\n\nconst DefaultOpts: Partial<GeoTimeScaleOptions> = {\n  height: 400,\n  fontSize: 12,\n  fontFamily: 'sans-serif',\n  margin: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  padding: {\n    top: 0, right: 0, bottom: 0, left: 0,\n  },\n  transition: 450,\n  intervalSum: d => d.leaf ? d.start - d.end : 0,\n  simplify: false,\n  neighborWidth: 100,\n  tickLength: 15,\n  unit: ''\n}\n\nexport default class GeoTimeLine {\n  /** text font */\n  readonly font: string;\n  /** svg object */\n  readonly svg: Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  readonly height: number;\n  readonly width: number;\n  private _handleX: number;\n  \n  /** interval data */\n  readonly intervals: IntervalItem[];\n  /** hierarchical data generated by intervals */\n  readonly hierarchicalData: HierarchyNode<IntervalItem>;\n  /** the root hierarchical data */\n  readonly root: NodeItem;\n  /** user input options */\n  readonly options: GeoTimeScaleOptions\n  private _onChange: (node: NodeItem) => void;\n  private _onDrag: (time: number) => void;\n  private _ready: boolean;\n  private _cellGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n  private _cell: Selection<SVGGElement | BaseType, NodeItem, SVGGElement, unknown>;\n  private _rect: Selection<SVGRectElement, NodeItem, SVGGElement, unknown>;\n  private _text: Selection<SVGTextElement, NodeItem, SVGGElement, unknown>;\n  private _handle: Selection<SVGGElement, unknown, HTMLElement, any>;\n  /** get or set animation transition time */\n  transition: number;\n  private _simplify: boolean;\n  private _focus: NodeItem;\n  private _sequence: NodeItem[];\n  private _neighborWidth: number;\n  private _tickLength: number;\n  private _ticksGroup: Selection<SVGGElement, unknown, HTMLElement, any>;\n\n  /**\n   * Create a GeoTimeScale\n   * @param {string | BaseType} selector CSS selector string\n   * @param {IntervalItem[]} intervals geo time intervals array\n   * @param {number} [options.width] svg width, defaults to container's width\n   * @param {number} [options.height = 400] svg height, defaults to 400px\n   * @param {number} [options.fontSize = 12] font size, defaults to 12px\n   * @param {string} [options.fontFamily = 'sans-serif'] font family, defaults to 'sans-serif'\n   * @param {Function} [options.onChange] callback when focused node change\n   * @param {Function} [options.onDrag] callback when handle drag end\n   * @param {Object} [options.margin] svg margin, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {Object} [options.padding] svg padding, defaults to { top: 0, right: 0, bottom: 0, left: 0 }\n   * @param {number} [options.transition = 450] animation time, defaults to 450ms\n   * @param {Function} [options.intervalSum] interval transform setting, defaults to d => d.leaf ? d.start - d.end : 0\n   * @param {boolean} [options.simplify = true] simplify show 2 levels or not\n   * @param {number} [options.neighborWidth = 100] focused node's neighbor node width, defaults to 100px\n   * @param {number} [options.tickLength = 15] tick length, defaults to 15px\n   * @param {string} [options.unit = ''] tick value unit\n   */\n  constructor(selector: string | BaseType, intervals: IntervalItem[], options: GeoTimeScaleOptions = {}) {\n    const selection = select(selector as BaseType)\n    if (!selection.node()) {\n      throw Error('Invalid selecor!')\n    }\n    if (!intervals?.length) {\n      throw Error('Empty intervals !')\n    }\n\n    const containerWidth = +selection.style('width').split('px')[0]\n    const opts: GeoTimeScaleOptions = {\n      ...DefaultOpts,\n      margin: {\n        ...DefaultOpts.margin,\n        ...options.margin\n      },\n      padding: {\n        ...DefaultOpts.padding,\n        ...options.padding\n      },\n      width: isNaN(containerWidth) ? 1000 : containerWidth,\n      ...options\n    }\n    const { width, height, intervalSum, onChange, onDrag, transition, simplify, neighborWidth, tickLength } = opts\n    this.transition = transition\n    this._onChange = onChange\n    this._onDrag = onDrag\n    this.font = `${opts.fontSize}px ${opts.fontFamily}`\n    this.intervals = intervals\n    this._simplify = simplify\n    this._neighborWidth = neighborWidth\n    this._tickLength = tickLength\n\n    this.options = opts\n    \n    this.hierarchicalData = stratify<IntervalItem>()(intervals)\n      .sum(intervalSum)\n      .sort((a, b) => b.data.start - a.data.start)\n\n    this.root = partition<IntervalItem>()\n      .size([width, (height - opts.margin.bottom - opts.margin.top) * (simplify ? (this.hierarchicalData.height + 1) / 2 : 1)])\n      .padding(0)(this.hierarchicalData)\n      \n    this.root.each(d => {\n      d.target = {\n        x0: d.x0,\n        x1: d.x1\n      }\n      d.visible = true\n    })\n    this._sequence = [this.root]\n\n    this.svg = selection\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"font\", this.font)\n\n    this.height = height\n    this.width = width\n    this._handleX = 0\n\n    this._ready = false\n\n    this._init()\n  }\n\n  /** get or set focused stage\n   * @example\n   * geoTimeScale.stage = 'Cambrian'\n   */\n  get stage(): string {\n    return this._focus.data.name\n  }\n\n  set stage(val: string) {\n    const node = this.root.find(node => node.data.name === val)\n    if (node) {\n      this._clicked(undefined, node, true)\n    }\n  }\n\n  set time(val: number) {\n    console.log('set time', val);\n    let maxLevelNodeParent;\n    let maxLevel = 0;\n    this.root.each(node => {\n      if (node.data.start >= val && node.data.end < val) {\n        if (!maxLevelNodeParent || node.depth > maxLevel) {\n          maxLevelNodeParent = node.parent\n          maxLevel = node.depth\n        }\n      }\n    })\n    if (maxLevelNodeParent) {\n      const x = this.getXByTime(val, maxLevelNodeParent);\n      this._changeHandlePos(this._handle, x, this.height);\n      if (x > this.width) {\n        this._clicked(undefined, maxLevelNodeParent.parent, true);\n      }\n    }\n  }\n\n  get sequence(): NodeItem[] {\n    return this._sequence\n  }\n\n  get ready(): boolean {\n    return this._ready\n  }\n  \n  private _init() {\n    const self = this\n    const svg = self.svg\n\n    // draw cells\n    self._cellGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"cells\")\n\n    self._cell = self._cellGroup\n      .selectAll(\"g\")\n      .data(self.root.descendants())\n      .join(\"g\")\n      .attr(\"transform\", (d) => `translate(0, ${d.y0})`)\n\n    self._rect = self\n      ._drawRect(self._cell)\n      .on(\"click\", self._clicked)\n\n    self._addTitle(self._cell)\n\n    // draw text\n    self._text = self._drawText(self._cell)\n    self._ticksGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"ticks\")\n\n    self._handle = self._drawHandle(svg, self.height)\n    self._handle\n      .call(drag()\n        .on(\"drag\", dragged)\n        .on(\"end\", () => {\n          const time = this.getTimeByX(self._handleX, self.height)\n          self._handle.attr(\"cursor\", \"grab\");\n          console.log('time', time);\n          if (self._onDrag) {\n            self._onDrag(time)\n          }\n        }))\n\n    function dragged(e: D3DragEvent<Element, unknown, unknown>) {\n      self._handleX = e.x;\n      self._changeHandlePos(self._handle, e.x, self.height)\n      self._handle.attr(\"cursor\", \"grabbing\")\n    }\n    \n    // zoom function\n    function zoomed(e: d3ZoomEvent) {\n      const event = e.sourceEvent\n\n      if (event.type === 'wheel') {\n        if ((event as any).wheelDelta < 0) {\n          self._clicked(undefined, self._focus)\n        } else {\n          const { offsetX } = event\n          const offsetY = event.offsetY + (self._simplify ? (self._focus?.y0 ?? 0) : 0)\n          const node = self.root.find(node => node.target.x0 <= offsetX && node.target.x1 > offsetX && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n          if (node) {\n            self._focus = null\n            self._clicked(undefined, node)\n          }\n        }\n      }\n    }\n\n    self._cellGroup\n      .call(\n        d3zoom()\n          .on('zoom', zoomed)\n          .on(\"end\", () => {\n            self._rect.attr(\"cursor\", \"pointer\");\n          })\n      )\n    \n    self._clicked(undefined, self.root)\n    \n    svg.on(\"pointerleave\", () => {\n      this._cell.attr(\"fill-opacity\", 1);\n    });\n\n    this._ready = true\n  }\n\n  private _dispatchFunc(func: typeof this._onChange) {\n    if (func && this._ready) {\n      func(this._focus)\n    }\n  }\n\n  private _addTitle(cell: typeof this._cell) {\n    return cell.append(\"title\").text((d) => {\n      const sequence = d\n        .ancestors()\n        .map((d) => d.data.name)\n        .reverse();\n\n      return `${sequence.join(\" > \")}`;\n    });\n  }\n\n  /**\n   * draw rect\n   */\n  private _drawRect(cell: typeof this._cell) {\n    return cell\n      .append(\"rect\")\n      .attr('fill', d => d.data.color)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"pointerenter\", (_event, d) => {\n        // Get the ancestors of the current segment\n        const sequence = d.ancestors().reverse();\n        // Highlight the ancestors\n        cell.attr(\"fill-opacity\", (d) => (sequence.includes(d) ? 1.0 : 0.5));\n      })\n  }\n\n  private _drawHandle(svg: Selection<SVGSVGElement, unknown, HTMLElement, any>, height: number) {\n    const handle = svg\n      .append('g')\n      .attr(\"cursor\", 'grab')\n      .attr(\"id\", \"handle\");\n\n    const cursorHeight = 20;\n    const svgHeight = height;\n\n    // 添加游标\n    handle.append(\"rect\")\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 1)\n      .attr(\"width\", 1)\n      .attr(\"height\", cursorHeight)\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", \"handleCursor\")\n    handle\n      .append('text')\n      .attr('x', 0)\n      .attr('y', svgHeight - cursorHeight - 3)\n      .attr(\"text-anchor\", \"middle\")\n      .text('4000ma')\n      .clone(true)\n      .lower()\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke\", \"white\")\n      .attr(\"id\", \"handleText\")\n    return handle\n  }\n\n  /** draw text */\n  private _drawText(cell: typeof this._cell) {\n    const text = cell\n      .append(\"text\")\n      .style(\"user-select\", \"none\")\n      .attr(\"pointer-events\", \"none\")\n      .attr(\"fill\", (d) => d.data.textColor ?? \"black\")\n      .attr(\"opacity\", 0.8)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n    \n    return text\n  }\n\n  private _makeTicksData(focus: NodeItem): TickNode[] {\n    const ticksData = this.root.descendants()\n      .map((d) => {\n        let visible = d.visible\n        const ifFocusBottom = (!focus.children && d.depth === focus.depth)\n        if (visible) {\n          if (!ifFocusBottom && d.parent?.visible && d.data.start === d.parent.data.start) {\n            visible = false\n          } else {\n            const text = d.data.start + this.options.unit\n            const rectWidth = d.target.x1 - d.target.x0\n            const labelWidth = getTextWidth(text, this.font)\n  \n            visible = rectWidth >= labelWidth * (1 - 0.05 * (d.data.level ?? 0))\n          }\n        }\n\n        return {\n          x: d.x0,\n          y: d.y0 - (this._simplify ? (ifFocusBottom ? focus.parent.y0 : focus.y0) : 0),\n          depth: d.depth,\n          targetX: d?.target?.x0 || 0,\n          text: d.data.start + this.options.unit,\n          visible\n        }\n      })\n\n    const now = {\n      x: this.root.x1,\n      y: 0,\n      depth: 0,\n      targetX: this.root?.target?.x1 || this.options.width,\n      text: '0',\n      visible: true\n    }\n\n    ticksData.push(now)\n\n    return ticksData\n  }\n\n  private _updateTicks<T extends Selection<BaseType, TickNode, BaseType, unknown>>(node: T): T {\n    return node\n      .attr(\"opacity\", (d) => d.visible ? 1 : 0)\n      .attr(\"display\", (d) => d.visible ? 'block' : 'none')\n      .attr(\"transform\", (d) => `translate(${d.targetX}, ${d.y})`)\n      .attr(\"dominant-baseline\", \"hanging\")\n      .attr(\"text-anchor\", (d) =>\n        d.targetX === 0 ? \"start\" : d.targetX >= this.root.target.x1 ? \"end\" : \"middle\"\n      )\n  }\n\n  private _addTicks(ticks: typeof this._ticksGroup, data: TickNode[]) {\n    ticks.selectAll(\"g\")\n      .data(data)\n      .join(\n      // @ts-ignore\n        (enter) => {\n          const tick = enter.append(\"g\")\n          this._updateTicks(tick)\n\n          tick\n            .append(\"line\")\n            .attr(\"stroke\", \"#555\")\n            .attr(\"stroke-width\", 1)\n            .attr(\"x1\", 0)\n            .attr(\"y1\", 0)\n            .attr(\"x2\", 0)\n            .attr(\n              \"y2\",\n              this._tickLength\n            );\n\n          tick\n            .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\n              \"y\",\n              this._tickLength + this.options.fontSize / 2\n            )\n            .attr(\"font-size\", (d) => `${1 - 0.05 * d.depth}em`)\n            .text((d) => d.text)\n            .clone(true)\n            .lower()\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"stroke\", \"white\");\n        },\n        (update) => this._updateTicks(trans(update, this.transition))\n      );\n  }\n\n  /**\n   * click rect and zoom\n   */\n  private _clicked = (event: any, p: NodeItem, ignoreTrigger = false): boolean => {\n    const focus = p === this._focus ? (p?.parent ?? p) : p;\n    this._focus = focus;\n\n    const focusAncestors = focus.ancestors().slice(1); // Ignore clicked node itself\n    const duration = this._ready ? this.transition : 0 // initial without transition\n\n    // Show a bit of the neighbouring cells on focus of an interval\n    const leftNeighbor =\n      focus.data.start === this.root.data.start ? 0 : this._neighborWidth;\n    const rightNeighbor = focus.data.end === this.root.data.end ? 0 : this._neighborWidth;\n    const widthMinusNeighbors = this.options.width - rightNeighbor - leftNeighbor;\n    const focusWidth = focus.x1 - focus.x0; // partition width of focused node\n\n    this.root.each(d => {\n      d.target = {\n        x0:\n          leftNeighbor + ((d.x0 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        x1:\n          leftNeighbor + ((d.x1 - focus.x0) / focusWidth) * widthMinusNeighbors,\n        y0: d.y0,\n        y1: d.y1,\n      }\n      if (this._simplify) {\n        d.visible = [focus.depth, focus.depth + 1].includes(d.depth) || (!focus.children && d.depth === focus.depth - 1)\n      }\n    })\n\n    trans(this._rect, duration)\n      .attr('x', d => (d.target.x0))\n      .attr('width', d => (d.target.x1 - d.target.x0))\n      .attr(\"height\", (d) => (d.visible ? (d.y1 - d.y0) : 0))\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1);\n\n    trans(this._text, duration)\n      .attr(\"fill-opacity\", (d) =>\n        focusAncestors.includes(d) ? 1 : +(d.target.x1 - d.target.x0 > 14)\n      )\n      .attr(\"x\", (d) => {\n        // Position all the ancestors labels in the middle\n        if (focusAncestors.includes(d)) {\n          return focus.target.x0 + (focus.target.x1 - focus.target.x0) / 2;\n        }\n\n        const textX = d.target.x0 + (d.target.x1 - d.target.x0) / 2;\n        return Number.isNaN(textX) ? 0 : textX;\n      })\n      .attr(\"y\", (d) => (d.y1 - d.y0) / 2)\n      .attr(\"opacity\", d => d.visible ? 1 : 0)\n      .attr(\"font-size\", (d) => d.id === focus.id ? this.options.fontSize + 6 : this.options.fontSize)\n      .attr(\"font-weight\", (d) => d.id === focus.id ? 'bold' : 500)\n      .text((d) => {\n        const rectWidth = Math.abs(d.target.x1 - d.target.x0);\n        const labelWidth = getTextWidth(d.data.name, this.font);\n        const abbrev = d.data.abbr || d.data.name.charAt(0);\n\n        return rectWidth - 8 < labelWidth ? abbrev : d.data.name;\n      })\n    \n    this._ticksGroup.call((g) => this._addTicks(g, this._makeTicksData(focus)));\n\n    if (this._simplify) {\n      trans(this._cell, duration)\n        .style('opacity', d => d.visible ? 1 : 0)\n  \n      trans(this._cellGroup, duration)\n        .attr(\"transform\", `translate(0, ${!this._focus.children ? -(this._focus.parent?.y0 ?? 0) : -this._focus.target.y0})`)\n    }\n    \n    const sequence = focus.ancestors().reverse();\n    this._sequence = sequence;\n\n    if (!ignoreTrigger) {\n      this._changeHandlePos(this._handle, focus.target.x0, this.height, duration)\n      this._dispatchFunc(this._onChange)  \n    }\n\n    return true\n  }\n\n  private _changeHandlePos(\n    handle: Selection<SVGGElement, unknown, HTMLElement, any>, \n    x: number, \n    height: number, \n    duration?: number\n  ): boolean {\n    trans(handle, duration)\n      .attr(\"transform\", `translate(${x}, 0), scale(1)`)\n    const text = this.getTimeByX(x, height)\n    if (text > 0) {\n      handle\n        .selectAll('text')\n        .text(`${text}ma`)\n    }\n    return true;\n  }\n\n  private getTimeByX(x: number, height: number): number {\n    const offsetY = height - 10\n    const node = this.root.find(node => node.target.x0 <= x && node.target.x1 > x && node.target.y0 <= offsetY && node.target.y1 > offsetY)\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const time = Math.ceil(start - ((start - end) / nodeWidth * (x - node.target.x0)))\n    return time;\n  }\n\n  private getXByTime(time: number, node: NodeItem): number {\n    if (!node) {\n      return 0\n    }\n    const { start, end } = node.data\n    const nodeWidth = node.target.x1 - node.target.x0\n    const x = node.target.x0 + (start - time) / (start - end) * nodeWidth\n    return x;\n  }\n}"],"names":["getTextWidth","text","font","context","canvas","document","createElement","getContext","measureText","width","trans","node","duration","transition","height","fontSize","fontFamily","margin","top","right","bottom","left","padding","time","intervalSum","d","leaf","maxZoom","showTick","selector","intervals","options","_opts$minZoom","this","maxLevel","svg","hierarchicalData","root","_width","_height","_time","_timeLength","_scaleRadio","_scaleVal","_level","_startTime","_endTime","_handle","_zoomedScale","_onChange","_onAfterChange","_ready","_xAxis","_cellGroup","_heightScale","_zoomWidth","_minZoom","_maxZoom","_zoomHeight","_zoom","_interval","_cell","_rect","_text","_ticks","_margin","_padding","_showTick","_limitHandle","_forceTrans","selection","select","Error","length","containerWidth","style","split","opts","_extends","DefaultOpts","isNaN","onChange","onAfterChange","limitHandle","minZoom","stratify","sum","sort","a","b","data","start","partition","size","each","target","x0","x1","visible","level","end","Math","abs","_getScaleXByTime","append","attr","_init","self","_self$options","selectAll","descendants","join","_drawRect","scaleLinear","domain","range","copy","_drawText","_addTicks","_drawHandle","call","drag","on","e","_changeHandlePos","dx","clearInterval","_dispatchFunc","extent","translateExtent","d3zoom","scaleExtent","transform","k","_transform","scaleBy","x","pointer","func","handle","addStripe","cell","color","_d$data$textColor","textColor","_this","ticks","y","clone","lower","toFixed","_d$data$level","_d$children","scale","dataLevel","children","textX","Number","rectWidth","labelWidth","name","_this2","abbrev","abbr","charAt","rescaleX","find","_setTime","minTime","min","maxTime","max","scaleX","bool","newx","translateTo","zoomedScale","invert","handleX","_createClass","GeoTimeLine","key","get","val","set","scaleTo","simplify","neighborWidth","tickLength","unit","_handleX","_onDrag","_simplify","_focus","_sequence","_neighborWidth","_tickLength","_ticksGroup","_clicked","event","p","ignoreTrigger","parent","focus","_this$_focus$parent$y","_this$_focus$parent","focusAncestors","ancestors","slice","leftNeighbor","widthMinusNeighbors","focusWidth","y0","y1","depth","includes","id","g","_makeTicksData","sequence","reverse","onDrag","_addTitle","getTimeByX","console","log","sourceEvent","type","wheelDelta","undefined","_self$_focus$y","_self$_focus","offsetX","offsetY","map","_event","svgHeight","_this$root","_this$root$target","_this3","_d$parent","ifFocusBottom","targetX","_d$target","now","ticksData","push","_updateTicks","_this4","enter","tick","_this5","update","ceil","getXByTime","maxLevelNodeParent"],"mappings":"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"}